// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTesting.Services;

#nullable disable

namespace WebTesting.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230416121444_RemoveUselessColumn")]
    partial class RemoveUselessColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTesting.Models.Download", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DomainsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DownloadFinished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DownloadStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDownloadable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Lenght")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgressAbs")
                        .HasColumnType("int");

                    b.Property<int>("ProgressAbsMax")
                        .HasColumnType("int");

                    b.Property<double>("ProgressRel")
                        .HasColumnType("float");

                    b.Property<string>("SubredditJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("WebTesting.Models.DownloadHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DownloadTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DownloadedPosts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("downloadHistories");
                });

            modelBuilder.Entity("WebTesting.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DomainFolder")
                        .HasColumnType("bit");

                    b.Property<bool>("DomainName")
                        .HasColumnType("bit");

                    b.Property<string>("DomainsForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Empty")
                        .HasColumnType("bit");

                    b.Property<bool>("GroupBySubreddit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nsfw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numbering")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PriorityFolder")
                        .HasColumnType("bit");

                    b.Property<bool>("PriorityName")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowDownloaded")
                        .HasColumnType("bit");

                    b.Property<bool>("Split")
                        .HasColumnType("bit");

                    b.Property<bool>("SubredditFolder")
                        .HasColumnType("bit");

                    b.Property<bool>("SubredditName")
                        .HasColumnType("bit");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("WebTesting.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedditId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebTesting.Models.Download", b =>
                {
                    b.HasOne("WebTesting.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
